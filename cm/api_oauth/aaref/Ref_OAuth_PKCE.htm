---
layout: oauthapipage
title: PKCE | Reference Material | Akana OAuth API
description: Learn about how the PKCE standard is supported in the Akana API Platform with the OAuth API operations.
product: cm
category: ref
nav-title: PKCE 
no-nav: oauthapi
sub-nav: true
sub-nav-class: aaref
no-catalog: true
---

<div class="apidocContent">
<h1 id="top">PKCE support with the Authorization Code grant type</h1>
<p>Learn about how the PKCE standard is supported in the Akana API Platform with the OAuth API operations.</p>
<h4 class="stamp">Valid in Version: 2020.2.0 and later</h4>

<h4>PKCE overview</h4>
<p>The <a href="../../learnmore/basics_glossary.htm#gl_pkce">PKCE</a> standard offers an additional layer of security. Essentially, the client generates another value which is a string, 40&#8211;128 characters. The client stores this string value as the <strong>code_verifier</strong> value.</p>
<p>Depending on how the standard is implemented, the client sends one or two parameters to the authorization server:</p>
<ul>
	<li>In all cases, the <strong>code_challenge</strong> parameter. This parameter is a hash of the <strong>code_verifier</strong> value, and might also be encrypted.</li>
	<li> Possibly another parameter, the <strong>code_challenge_method</strong> value. This parameter indicates whether the <strong>code_verifier</strong> value is encrypted. Valid values: <strong>Plain</strong> or <strong>S256</strong>. If this parameter is not provided, the default value is <strong>Plain</strong>, meaning that the <strong>code_challenge</strong> parameter is not encrypted.</li>
</ul>
<p>The authorization server stores the values that the client sends, generates the authorization token, and sends it to the client.</p>
<p>When the client sends the authorization token to the token endpoint, the client sends an additional value, the <strong>code_verifier</strong> value&#8212;a unique key, generated by the client according to specific rules laid out in the PKCE standard. Using the <strong>code_challenge</strong> and <strong>code_challenge_method</strong> values sent in the call to the authorization server, the OAuth server can verify that the values match. Since the client generated the value, and the <strong>code_challenge_method</strong> value is not sent in the second call, this helps prove that the request to the token endpoint was sent by the client and not by a malicious third party.</p>

<h4>PKCE support in the Akana API Platform</h4>
<p>The OAuth APIs support the PKCE standard with the following operations:</p>
<p>Requests to the authorization endpoint to support the <strong>code_challenge</strong> and <strong>code_challenge_method</strong> values:</p>
<ul>
	<li><a href="../oauth_auz/m_auz_requestResourceOwnerAuthorizationGET.htm">POST&#160;/oauth/auz/authorize</a></li>
	<li><a href="../oauth_auz/m_auz_requestResourceOwnerAuthorizationPOST_.htm">GET&#160;/oauth/auz/authorize</a></li>
</ul>
<p>Requests to the token endpoint to support the <strong>code_verifier</strong> value:</p>
<ul>
	<li><a href="../oauth_oauth20/m_oauth20_getTokenPOST.htm">POST&#160;/oauth/oauth20/token</a></li>
	<li><a href="../oauth_oauth20/m_oauth20_getTokenGET_.htm">GET&#160;/oauth/oauth20/token</a></li>
</ul>
<p>For more information about PKCE and how it works, refer to the standard: <a href="https://tools.ietf.org/html/rfc7636" title="Link to PKCE specification, Proof Key for Code Exchange by OAuth Public Clients" target="_blank">https://tools.ietf.org/html/rfc7636</a> (external link).</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">OAuth API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
</ul>
<ul>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
	<li><a href="../Ref_API_Reference.htm">OAuth API: Reference Material</a></li>
</ul>
</div>




</div>
